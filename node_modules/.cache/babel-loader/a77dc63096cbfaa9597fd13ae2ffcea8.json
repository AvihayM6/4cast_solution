{"ast":null,"code":"var _jsxFileName = \"/home/avihay/Desktop/forecast_ht_solution/src/components/DropArea.js\",\n    _s = $RefreshSig$();\n\nimport { useDrop } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DropArea = _ref => {\n  _s();\n\n  let {\n    onDrop,\n    answers,\n    index\n  } = _ref;\n  const answer = answers[index];\n  const [{}, dropRef] = useDrop({\n    accept: \"Answer\",\n    drop: item => {\n      if (answer) return;\n      onDrop && onDrop(item, index);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: \"container\",\n    style: {\n      border: \"3px solid green\",\n      height: \"100px\"\n    },\n    children: answer ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: answer.img,\n      alt: answer.name,\n      width: \"100px\",\n      className: \"img-map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : \"Answer Here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropArea, \"+agnxXvNgOta35nzjllEyipcdrY=\", false, function () {\n  return [useDrop];\n});\n\n_c = DropArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropArea\");","map":{"version":3,"sources":["/home/avihay/Desktop/forecast_ht_solution/src/components/DropArea.js"],"names":["useDrop","DropArea","onDrop","answers","index","answer","dropRef","accept","drop","item","border","height","img","name"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAA+B;AACtD,QAAMC,MAAM,GAAGF,OAAO,CAACC,KAAD,CAAtB;AACA,QAAM,CAAC,EAAD,EAAKE,OAAL,IAAgBN,OAAO,CAAC;AAC5BO,IAAAA,MAAM,EAAE,QADoB;AAE5BC,IAAAA,IAAI,EAAGC,IAAD,IAAU;AACZ,UAAGJ,MAAH,EAAW;AACbH,MAAAA,MAAM,IAAIA,MAAM,CAACO,IAAD,EAAOL,KAAP,CAAhB;AACD;AAL2B,GAAD,CAA7B;AAQA,sBACE;AACE,IAAA,GAAG,EAAEE,OADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE,iBADH;AAELC,MAAAA,MAAM,EAAE;AAFH,KAHT;AAAA,cAQGN,MAAM,gBACL;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACO,GAAjB;AAAsB,MAAA,GAAG,EAAEP,MAAM,CAACQ,IAAlC;AAAwC,MAAA,KAAK,EAAC,OAA9C;AAAsD,MAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,YADK,GAGL;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1BM;;GAAMZ,Q;UAEWD,O;;;KAFXC,Q","sourcesContent":["import { useDrop } from \"react-dnd\";\n\nexport const DropArea = ({ onDrop, answers, index }) => {\n  const answer = answers[index];\n  const [{}, dropRef] = useDrop({\n    accept: \"Answer\",\n    drop: (item) => {\n        if(answer) return\n      onDrop && onDrop(item, index);\n    },\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className=\"container\"\n      style={{\n        border: \"3px solid green\",\n        height: \"100px\"\n      }}\n    >\n      {answer ? (\n        <img src={answer.img} alt={answer.name} width=\"100px\" className=\"img-map\" />\n      ) : (\n        \"Answer Here\"\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}